# Dynamic Programming (동적 계획법), 이름엔 큰 의미 없다.
# 조건: 1. 큰 문제를 작은 문제로 나눌 수 있다. 2. 중복되는 부분 문제가 존재한다.
# Memoization: 중복되는 문제들을 다시 계산하는 것이 아니라 저장해둔 결과를 가져오면서 시간을 줄임.
# Divide conquer와의 차이: 중복 부분(문제) 유무

# dynamic Programming 문제 접근 방법
# 1. 주어진 문제가 다이나믹 프로그래밍 유형임을 파악.
# 2. 먼저 그리디, 구현, 완전 탐색 등의 아이디어로 문제를 해결할 수 있는지 검토
# 3. 비효율적인 재귀함수로 작성한 후에, 작은 문제에서 구한 답이 큰 문제에서 사용될 수 있으면 코드를 개선하는 방법이 있다.
